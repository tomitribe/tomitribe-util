/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.tomitribe.util;

import org.junit.Assert;
import org.junit.Test;

import java.util.Arrays;

public class VersionTest {

    private static final String[] VERSION_LIST = {
            "xx-parent-0.55",
            "xx-parent-0.56",
            "xx-parent-0.57",
            "xx-parent-0.57.1",
            "xx-parent-0.57.2",
            "xx-parent-0.60",
            "xx-parent-0.61",
            "xx-parent-0.61.1",
            "xx-parent-0.61.2",
            "xx-parent-0.62",
            "xx-parent-0.62.1",
            "xx-parent-0.63",
            "xx-parent-0.63.1",
            "xx-parent-0.63.2",
            "xx-parent-0.63.3",
            "xx-parent-0.63.4",
            "xx-parent-0.63.5",
            "xx-parent-0.64",
            "xx-parent-0.65",
            "xx-parent-0.65.1",
            "xx-parent-0.66",
            "xx-parent-0.67",
            "xx-parent-0.68",
            "xx-parent-0.69",
            "xx-parent-0.70",
            "xx-parent-0.71",
            "xx-parent-0.72",
            "xx-parent-0.72.1",
            "xx-parent-0.72.2",
            "xx-parent-0.73",
            "xx-parent-0.74",
            "xx-parent-0.75",
            "xx-parent-0.76",
            "xx-parent-0.76.1",
            "xx-parent-0.77",
            "xx-parent-0.77.1",
            "xx-parent-0.78",
            "xx-parent-0.79",
            "xx-parent-0.80",
            "xx-parent-0.80.1",
            "xx-parent-0.80.2",
            "xx-parent-0.80.3",
            "xx-parent-0.80.4",
            "xx-parent-0.80.5",
            "xx-parent-0.80.6",
            "xx-parent-0.80.M1",
            "xx-parent-0.80.M2",
            "xx-parent-0.80.M3",
            "xx-parent-0.81",
            "xx-parent-0.82",
            "xx-parent-0.82.M1",
            "xx-parent-0.82.M2",
            "xx-parent-0.83",
            "xx-parent-0.84",
            "xx-parent-0.85",
            "xx-parent-0.86",
            "xx-parent-0.86.1",
            "xx-parent-0.87",
            "xx-parent-0.87.1",
            "xx-parent-0.88",
            "xx-parent-0.88.1",
            "xx-parent-0.89",
            "xx-parent-0.89.1",
            "xx-parent-0.90",
            "xx-parent-0.91",
            "xx-parent-0.92",
            "xx-parent-0.93",
            "xx-parent-0.93.M1",
            "xx-parent-0.94",
            "xx-parent-0.94.1",
            "xx-parent-0.94.2",
            "xx-parent-0.94.3",
            "xx-parent-0.94.4",
            "xx-parent-0.94.5",
            "xx-parent-0.94.M1",
            "xx-parent-0.95",
            "xx-parent-0.95-superbiz-demo",
            "xx-parent-0.96.M2",
            "xx-parent-1.0",
            "xx-parent-1.0-1215-MR.11",
            "xx-parent-1.0-1221-MR.11",
            "xx-parent-1.0-1221-MR.11-docs",
            "xx-parent-1.0-1222-MR.11",
            "xx-parent-1.0-1229-MR.11",
            "xx-parent-1.0-170324-MR.4",
            "xx-parent-1.0-MB.11",
            "xx-parent-1.0-MB2",
            "xx-parent-1.0-MR.3",
            "xx-parent-1.0-MR.4",
            "xx-parent-1.0-MR.5",
            "xx-parent-1.1",
            "xx-parent-1.10",
            "xx-parent-1.11",
            "xx-parent-1.12",
            "xx-parent-1.13",
            "xx-parent-1.14",
            "xx-parent-1.15",
            "xx-parent-1.16",
            "xx-parent-1.17",
            "xx-parent-1.2",
            "xx-parent-1.3",
            "xx-parent-1.4",
            "xx-parent-1.4.1",
            "xx-parent-1.5",
            "xx-parent-1.6",
            "xx-parent-1.7",
            "xx-parent-1.8",
            "xx-parent-1.9",
    };

    private static final String[] EXPECTED_SORTED_VERSION_LIST = {
            "xx-parent-0.55",
            "xx-parent-0.56",
            "xx-parent-0.57",
            "xx-parent-0.57.1",
            "xx-parent-0.57.2",
            "xx-parent-0.60",
            "xx-parent-0.61",
            "xx-parent-0.61.1",
            "xx-parent-0.61.2",
            "xx-parent-0.62",
            "xx-parent-0.62.1",
            "xx-parent-0.63",
            "xx-parent-0.63.1",
            "xx-parent-0.63.2",
            "xx-parent-0.63.3",
            "xx-parent-0.63.4",
            "xx-parent-0.63.5",
            "xx-parent-0.64",
            "xx-parent-0.65",
            "xx-parent-0.65.1",
            "xx-parent-0.66",
            "xx-parent-0.67",
            "xx-parent-0.68",
            "xx-parent-0.69",
            "xx-parent-0.70",
            "xx-parent-0.71",
            "xx-parent-0.72",
            "xx-parent-0.72.1",
            "xx-parent-0.72.2",
            "xx-parent-0.73",
            "xx-parent-0.74",
            "xx-parent-0.75",
            "xx-parent-0.76",
            "xx-parent-0.76.1",
            "xx-parent-0.77",
            "xx-parent-0.77.1",
            "xx-parent-0.78",
            "xx-parent-0.79",
            "xx-parent-0.80",
            "xx-parent-0.80.1",
            "xx-parent-0.80.M1",
            "xx-parent-0.80.2",
            "xx-parent-0.80.M2",
            "xx-parent-0.80.3",
            "xx-parent-0.80.M3",
            "xx-parent-0.80.4",
            "xx-parent-0.80.5",
            "xx-parent-0.80.6",
            "xx-parent-0.81",
            "xx-parent-0.82",
            "xx-parent-0.82.M1",
            "xx-parent-0.82.M2",
            "xx-parent-0.83",
            "xx-parent-0.84",
            "xx-parent-0.85",
            "xx-parent-0.86",
            "xx-parent-0.86.1",
            "xx-parent-0.87",
            "xx-parent-0.87.1",
            "xx-parent-0.88",
            "xx-parent-0.88.1",
            "xx-parent-0.89",
            "xx-parent-0.89.1",
            "xx-parent-0.90",
            "xx-parent-0.91",
            "xx-parent-0.92",
            "xx-parent-0.93",
            "xx-parent-0.93.M1",
            "xx-parent-0.94",
            "xx-parent-0.94.1",
            "xx-parent-0.94.M1",
            "xx-parent-0.94.2",
            "xx-parent-0.94.3",
            "xx-parent-0.94.4",
            "xx-parent-0.94.5",
            "xx-parent-0.95",
            "xx-parent-0.95-superbiz-demo",
            "xx-parent-0.96.M2",
            "xx-parent-1.0",
            "xx-parent-1.0-MB2",
            "xx-parent-1.0-MR.3",
            "xx-parent-1.0-MR.4",
            "xx-parent-1.0-MR.5",
            "xx-parent-1.0-MB.11",
            "xx-parent-1.0-1215-MR.11",
            "xx-parent-1.0-1221-MR.11",
            "xx-parent-1.0-1221-MR.11-docs",
            "xx-parent-1.0-1222-MR.11",
            "xx-parent-1.0-1229-MR.11",
            "xx-parent-1.0-170324-MR.4",
            "xx-parent-1.1",
            "xx-parent-1.2",
            "xx-parent-1.3",
            "xx-parent-1.4",
            "xx-parent-1.4.1",
            "xx-parent-1.5",
            "xx-parent-1.6",
            "xx-parent-1.7",
            "xx-parent-1.8",
            "xx-parent-1.9",
            "xx-parent-1.10",
            "xx-parent-1.11",
            "xx-parent-1.12",
            "xx-parent-1.13",
            "xx-parent-1.14",
            "xx-parent-1.15",
            "xx-parent-1.16",
            "xx-parent-1.17"
    };

    @Test
    public void testShouldSortTagNamesCorrectly() throws Exception {
        final String[] sorted = Version.sort(VERSION_LIST);
        Assert.assertArrayEquals(EXPECTED_SORTED_VERSION_LIST, sorted);
    }
}
